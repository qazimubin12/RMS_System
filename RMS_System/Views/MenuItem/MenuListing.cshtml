@model RMS_System.ViewModels.MenuItemListingViewModel
@{
    ViewBag.Title = "MenuListing";
    var PlaceholderURL = "/Content/themedata/dist/img/placeholder.png";
    int count = 0;

}

<div class="row">
    <div class="container-fluid">
        <div class="col-md-9">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Menu List</h3>
                    <br />
                    @using (Html.BeginForm("MenuListing", "MenuItem", FormMethod.Get))
                    {
                        <input type="text" class="form-control" name="Search" id="Search" placeholder="Search Menu Item">
                        <button type="submit" id="btnSearch" class="btn btn-outline-info">Search</button>
                        <button type="submit" id="btnViewAll" class="btn btn-outline-secondary">View All</button>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<!-- /.card-header -->

<br />
<div class="row col-md-12">

    @foreach (var item in Model.MenuItems)
    {
        <div class="col-lg-3 col-md-6 mb-4 mb-lg-0">
            <!-- Card-->
            <div class="card rounded shadow-sm border-0">
                <div class="card-body p-4">
                    @if (item.ImageURL == null)
                    {
                    <img style="height:100px; width:140px"  class="img-fluid d-block mx-auto mb-3" src="@Url.Content(PlaceholderURL)" />
                    }
                    else
                    {
                        <img style="height:100px; width:140px"  class="img-fluid d-block mx-auto mb-3" src="@Url.Content(item.ImageURL)" />
                    }
                    <h5> <a href="#" class="text-dark">@item.MenuName</a></h5>
                    <ul class="list-inline medium">
                        <li class="m-0">@item.CategoryName</li>
                        <li class="m-0">@item.Description</li>
                        <li class="m-0"><b>Rs: @item.Price \-</b></li>
                        <li class="list-inline"><button type="button" onclick="EditMenuItem(@item.ID)" class="btnEdit  btn  bg-gradient-primary" data-id="@item.ID">EDIT</button>&nbsp;<button type="button" onclick="DeleteMenuItem(@item.ID)" data-id="@item.ID" class="btnDelete btn  bg-gradient-danger">DELETE</button></li>
                        
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

    






<!-- /.card-body -->





<script>

    function EditMenuItem(userId) {
        $.ajax({
            url: '@Url.Action("Edit", "MenuItem")',
            type: "GET",
            data: { ID: userId }
        })
            .done(function (response) {
                window.location.href = "@Url.Action("Edit", "MenuItem")" +"/"+ userId;
            })
            .error(function (error) {
                alert(error);
            })

    };






    function refreshPage() {
        location.reload(true);
    }

     $("#btnSearch").click(function () {
        var searchvalue = $("#txtSearch").val();

        $.ajax({
            url: '@Url.Action("MenuListing", "MenuItem")',
            data: {
                search: searchvalue
            }
        })
            .done(function (response) {
                $("#menuTable").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {

            })

     });


    $("#btnViewAll").click(function () {
		var searchValue = '';

		$.ajax({
            url: '@Url.Action("MenuListing", "MenuItem")',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
            $("#menuTable").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});


    function DeleteMenuItem(userId) {
        var confirmDelete = confirm("Are you sure want to delete this MenuItem?")
        if (confirmDelete) {
            $.ajax({
                url: '@Url.Action("Delete", "MenuItem")',
                type: "POST",
                data: { id: userId }
            })
                .done(function (oData) {
                    refreshPage();
                })
                .error(function (error) {
                    alert(error);
                })
        }
    };



</script>

